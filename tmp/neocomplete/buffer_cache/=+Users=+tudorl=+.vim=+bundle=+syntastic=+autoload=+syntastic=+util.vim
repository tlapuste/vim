{'exists(', 'g:loaded_syntastic_util_autoload', 'g:loaded_syntastic_plugin', 'finish', 'endif', 's:save_cpo', '&cpo', '&vim', 'Public', 'functions', 'function!', 'syntastic#util#isRunningWindows(', 'abort', 'return', 'has(', 'win16', 'win32', 'win64', 'endfunction', 'syntastic#util#DevNull(', 'null', 'directory', 'separator', 'syntastic#util#Slash(', 'shellslash', '&shellslash', 'syntastic#util#CygwinPath(', 'path', 'substitute(', 'syntastic#util#system(', 'cygpath', 'syntastic#util#shescape(', 'a:path', 'command', 'old_shell', '&shell', 'old_lc_messages', '$LC_MESSAGES', 'old_lc_all', '$LC_ALL', 'syntastic#util#var(', 'shell', 'system(', 'a:command', 'Create', 'temporary', 'syntastic#util#tmpdir(', 'tempdir', 'unix', 'executable(', 'mktemp', 'TODO:', 'option', 'mktemp(', 'portable', '$TMPDIR', '$TMP', 'split(', '-syntastic-', 'getpid(', '-XXXXXXXX', 'v:shell_error', 'len(', '$TEMP', 'elseif', 'win32unix', 'else', 'call', 'mkdir(', 'catch', 'E739', 'syntastic#log#error(', 'v:exception', 'endtry', 'Recursively', 'remove', 'syntastic#util#rmrf(', 'what', 'make', 'sure', 'delete', 'directories', 'didn', 'create', 'a:what', 'getftype(', 's:rmrf', 'rmdir', 'win95', 'dos16', 'dos32', 'deltree', 'silent!', 's:_rmrf(', 'delete(', 'Search', 'first', 'lines', 'file', 'magic', 'number', 'containing', 'args', 'executable', 'perl', '-bar', 'returns', 'syntastic#util#parseShebang(', 'lnum', 'range(', 'line', 'getline(', 'env(', 'matchstr(', 'endfor', 'value', 'variable', 'Allow', 'local', 'variables', 'override', 'global', 'ones', 'name', 'b:syntastic_', 'a:name', 'g:syntastic_', 'Parse', 'version', 'string', 'Return', 'array', 'components', 'syntastic#util#parseVersion(', 'map(', 'a:version', 'str2nr(', 'v:val', 'Verify', 'that', 'installed', 'least', 'required', 'must', 'arrays', 'they', 'have', 'different', 'lengths', 'missing', 'elements', 'will', 'assumed', 'purposes', 'checking', 'http:', 'semver', 'info', 'about', 'numbers', 'syntastic#util#versionIsAtLeast(', 'syntastic#util#compareLexi(', 'a:installed', 'a:required', 'Almost', 'lexicographic', 'comparison', 'lists', 'integers', 'max(', 'a_element', 'get(', 'b_element', 'still', 'here', 'thus', 'everything', 'matched', 'strwidth(', 'added', 'doesn', 'exist', 'strlen(', 'hope', 'best', 's:_width', 'function(', 'strwidth', 'strlen', 'lockvar', 'syntastic#util#screenWidth(', 'tabstop', 'chunks', 'a:str', 'width', 's:_width(', 'cwidth', 'a:tabstop', 'Print', 'much', 'a:msg', 'possible', 'without', 'Press', 'Enter', 'prompt', 'appearing', 'syntastic#util#wideMsg(', 'old_ruler', '&ruler', 'old_showcmd', '&showcmd', 'This', 'because', 'some', 'error', 'messages', 'begin', 'with', 'which', 'cause', 'press', 'enter', 'convert', 'tabs', 'spaces', 'count', 'towards', 'window', 'proper', 'amount', 'characters', 'join(', 'repeat(', '&tabstop', 'strpart(', '&columns', 'noruler', 'noshowcmd', 'syntastic#util#redraw(', 'echo', 'Check', 'whether', 'buffer', 'loaded', 'listed', 'hidden', 'syntastic#util#bufIsActive(', 'hell', 'breaks', 'loose', 'a:buffer', 'bufloaded(', 'buflisted(', 'buffers', 'tabpagenr(', 'index(', 'tabpagebuflist(', 'Start', 'a:where', 'walk', 'parent', 'folders', 'until', 'finds', 'named', 'syntastic#util#findFileInParent(', 'where', 'old_suffixesadd', '&suffixesadd', 'findfile(', 'escape(', 'matching', 'syntastic#util#findGlobInParent(', 'fnamemodify(', 'root', 'drive', 'letter', 'ever', '-green', 'source', 'That', 'care', 'running', 'syntastic', 'Amiga', 'these', 'days', 'while', 'globpath(', 'empty(', 'break', 'rather', 'than', 'since', 'adds', 'trailing', 'p:h:h', 'endwhile', 'Returns', 'unique', 'list', 'syntastic#util#unique(', 'seen', 'uniques', 'a:list', 'has_key(', 'add(', 'less', 'noisy', 'shellescape(', 'a:string', '-Za-z0-9', 'expand(', 'syntastic#util#shexpand(', 'Escape', 'arguments', 'syntastic#util#argsescape(', 'type(', 'a:opt', 'copy(', 'Decode', 'entities', 'syntastic#util#decodeXMLEntities(', '&quot', '&apos', '&amp', 'full', 'a:full', 'redraw!', 'redraw', 'syntastic#util#dictFilter(', 'errors', 'filter', 'rules', 's:_translateFilter(', 'a:filter', 'syntastic#log#debug(', 'g:_SYNTASTIC_DEBUG_TRACE', 'applying', 'filter:', 'filter(', 'a:errors', 'quiet_messages:', 'seconds', 'fractions', 'strings', 'representing', 'hopefully', 'high', 'resolution', 'time', 'program', 'start', 'syntastic#util#stamp(', 'reltimestr(', 'reltime(', 'g:_SYNTASTIC_START', 's:_str2float', 'str2float', 'str2nr', 'syntastic#util#str2float(', 's:_str2float(', 'a:val', 'syntastic#util#float2str(', 's:_float2str(', 'Crude', 'printf(', '-like', 'formatter', 'Handles', 'wide', 'syntastic#util#wformat(', 'format', 'a:format', 'echomsg', 'string(', 'specs', 'matchlist(', 'flushleft', 'lpad', 'minlen', 'maxlen', 'chars', '&encoding', '&termencoding', 'u2026', 'reverse(', 'Private', 'filters', 'conditions', 'keys(', 'a:filters', 'extend(', 's:_translateElement(', 'term', 'fkey', 'a:key', 'level', 'type', 'a:term', 'style', 'subtype', 'regex', 'text', 'file:', 'bufname(', 'bufnr', 'syntastic#log#warn(', 'ignoring', 'invalid', 'strtrans(', 's:rmdir', 'netrw_localrmdir', 'filewritable(', 's:_float2str_smart(', 's:_float2str_dumb(', 's:_float2str', 'float', 's:_float2str_smart', 's:_float2str_dumb', 'unlet', 'vim:', 'marker:'}
